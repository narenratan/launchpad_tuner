name: build
run-name: build
on: [push]
jobs:
  build_linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
            submodules: 'true'
      - name: Build
        run: |
            sudo apt-get update
            sudo apt-get upgrade -y
            sudo apt-get install -y libcairo2-dev libwebp-dev g++
            cmake -B build -D CMAKE_BUILD_TYPE=Release
            cmake --build build
            OUTPUT_DIR=LaunchpadTuner_$(git rev-parse --short HEAD)_linux
            echo output_dir=$OUTPUT_DIR >> $GITHUB_ENV
            mkdir $OUTPUT_DIR
            cp build/LaunchpadTuner.clap $OUTPUT_DIR
      - uses: actions/upload-artifact@v4
        with:
            name: ${{ env.output_dir }}
            path: ${{ env.output_dir }}
  build_mac:
    runs-on: macos-14
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
            submodules: 'true'
      - name: Import code signing certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
            p12-file-base64: ${{ secrets.DEV_ID_APP_CERT }}
            p12-password: ${{ secrets.DEV_ID_APP_PASSWORD }}
      - name: Build
        run: |
            brew install pkg-config cairo webp
            cmake -B build -D CMAKE_BUILD_TYPE=Release
            cmake --build build
            OUTPUT_DIR=LaunchpadTuner_$(git rev-parse --short HEAD)_mac
            echo output_dir=$OUTPUT_DIR >> $GITHUB_ENV
            mkdir $OUTPUT_DIR
            codesign --force -s "${{ secrets.DEVELOPER_ID_APPLICATION}}" -v build/LaunchpadTuner.clap --deep --strict --timestamp
            cp build/LaunchpadTuner.clap $OUTPUT_DIR
      - uses: actions/upload-artifact@v4
        with:
            name: ${{ env.output_dir }}
            path: ${{ env.output_dir }}
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
            submodules: 'true'
      - name: Build
        run: |
            ./libs/vcpkg/bootstrap-vcpkg.bat
            ./libs/vcpkg/vcpkg.exe install pkgconf:x64-windows-static cairo:x64-windows-static libwebp:x64-windows-static
            cmake -B build
            cmake --build build --config Release
            $OUTPUT_DIR = "LaunchpadTuner_$(git rev-parse --short HEAD)_windows"
            echo output_dir=$OUTPUT_DIR >> $env:GITHUB_ENV
            mkdir $OUTPUT_DIR
            cp build/Release/LaunchpadTuner.clap $OUTPUT_DIR
      - uses: actions/upload-artifact@v4
        with:
            name: ${{ env.output_dir }}
            path: ${{ env.output_dir }}
